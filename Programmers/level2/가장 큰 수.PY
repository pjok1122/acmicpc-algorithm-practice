'''

[문제 설명]

0 또는 양의 정수가 주어졌을 때, 정수를 이어 붙여 만들 수 있는 가장 큰 수를 알아내 주세요.

예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.

0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, 순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return 하도록 solution 함수를 작성해주세요.

제한 사항
numbers의 길이는 1 이상 100,000 이하입니다.
numbers의 원소는 0 이상 1,000 이하입니다.
정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.
입출력 예
numbers	return
[6, 10, 2]	6210
[3, 30, 34, 5, 9]	9534330

[문제 풀이]

문제를 보면 바로 알 수 있는 것은 맨 앞자리의 숫자가 큰 수부터 나열해야한다는 점이다.

문자열을 비교연산자로 비교하면, 맨 앞의 숫자부터 순서대로 비교해 나간다. 즉, "345" 와 "35"를 비교하면, 앞 두자리 수가 큰 "35"가 더 크다는 결론을 뱉는다.

즉, [3,30,34,5,9] 라는 배열을 문자열로 변환한 후 내림차순을 진행하면 ['9','5','34','30','3'] 이라는 결과가 나온다.

'30'이 '3'보다 앞에 나온 걸로 보아, 앞 자릿수가 똑같은 경우에는 자릿수가 없는 '3'이 우선순위가 더 낮다.

하지만 "330"이 "303"보다 크다. 즉, '3'은 '30'보다 앞에 있어야 한다.

여기서 우리는 a가 b의 부분 문자열인 경우에는 약간의 예외 상황이 발생한다고 추론할 수 있다.

그럼, a가 b의 부분 문자열인 경우에만 a에 우선순위를 더 줘서 a+b 꼴로 나타내면 될까? 이 부분도 스스로 증명을 하고 넘어가야 한다.

a = xy
b = xyz

라고 해보자. a+b = xyxyz , b+a = xyzxy 이므로 x와 z의 결과에 따라 값이 달라질 수 있다.

a = 12
b = 120

이라면, a+b가 더 큰 값을 갖게 되고,

a = 12
b = 123 이라면, b+a가 더 큰 값을 갖게 된다.

따라서 a가 b의 부분 문자열인 경우에는 어떤 특정한 비교가 필요하다.

위의 예시를 다시 한 번 보자. a=12, b=120 인 경우,

a+b = 121..
b+a = 120..

이므로 3번째 자리에서 이미 결정이 난다. 잘 생각해보면 a는 b의 부분 문자열이기 때문에 a+b는 항상 앞부분이 a+a로 시작한다.
b+a는 a+"다른 문자"+a 이므로 b는 b+b의 일부분이라고 볼 수 있다.

여기서 우리는 한 가지 가설을 세울 수 있다. "모든 숫자의 우선순위는 자신을 반복해서 이어붙인 숫자" 라는 가설이다.

얼마까지 이어붙여야 할까? 모든 숫자가 1000이하 이기 때문에, 한 자리 숫자를 기준으로 하여 최대 3번 이어붙여주면 된다.

즉 a = 12 라면 우선순위는 "121212" 가 되고,
b = 121이라면, 우선순위는 "121121121"이 된다.

4번째 자릿수에서 a의 우선순위가 크므로 a+b가 옳은 값이다. 앞에서 본 것처럼, a+b는 "12121" 이므로 a+a+a의 일부분이다.
b+a는 "12112"이므로 b+b의 일부분이다.

자연스럽게 드는 의문은 4번째 자리, 5번째 자리까지 계속 일치한다면 모순점이 발생하지 않을까? 하는 생각이다.

문제의 초기 조건으로 돌아와보면, a와 b는 일단 자릿수가 달라야 한다. 즉 a가 3자리 수라고 해도 b는 2자리 수이거나 1자리 수이다.

b가 한 자리 수라면, 

a = xyz
b = x

과 같은 형태여야 한다. 즉 xy가 크냐, xx가 크냐로 귀결된다. 만약 y=x라고 해도, xxz가 크냐 xxx가 크냐로 귀결된다. 즉, b의 우선순위는 xxx라고 볼 수 있다.

a = xyz
b = xy

라고 생각해보자. 여기서는 xyz가 크냐 xyx가 크냐는 문제로 귀결되며, 만약 x=z라고 해도, xyxx가 크냐 xyxy가 크냐로 귀결된다. 여기서도 x=y라고 가정해버린다면

a = xxx
b = xx

이므로 a와 b의 우선순위는 동일하다고 보는 게 맞다.



'''


def solution(numbers):
    numbers = list(map(str, numbers))
    numbers.sort(key=lambda x: x*3, reverse=True)
    return str(int(''.join(numbers)))
