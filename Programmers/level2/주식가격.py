'''
주식가격

[문제 설명]

초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.

제한사항
prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.
prices의 길이는 2 이상 100,000 이하입니다.
입출력 예
prices	return
[1, 2, 3, 2, 3]	[4, 3, 1, 1, 0]
입출력 예 설명
1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.
2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.
3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.
4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.
5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.
※ 공지 - 2019년 2월 28일 지문이 리뉴얼되었습니다.

현재 가격에서 가격이 안떨어진 기간을 각 배열에 담아 리턴.

[문제 풀이]

우선 문제에 대한 설명이 너무 불친절하다. 문제의 의도는 각 시간의 금액에서 추후에 언제까지 가격이 떨어지지 않았는가를 전부 출력하라는 의도이다.

즉, 0초 시점의 가격이 1원이었고, 4초까지 가격이 유지되었으므로 answer[0] = 4 가 된다.
마찬가지로 1초 시점의 가격은 2원이었고, 4초까지 가격이 유지되었으므로 answer[1] = 3이 된다.

O(n^2)으로 생각하면 아주 손쉽게 구현 가능. 따라서 문제 자체는 쉽다.

문제가 스택/큐로 분류되는 것으로 보아, 스택을 이용하여 구현하면 조금은 더 효율적으로 짤 수 있을 것으로 보인다.

하지만, 스택으로 구현하더라도 드라마틱한 시간복잡도가 나올 것 같진 않다. (방법도 잘 모르겠고..)
'''


def solution(prices):
    answer = []
    for i in range(len(prices)):
        time = 0
        for j in range(i+1, len(prices)):
            if prices[i] <= prices[j]:
                time += 1
            else:
                time += 1
                break
        answer.append(time)

    return answer


print(solution([1, 2, 3, 2, 3]))
