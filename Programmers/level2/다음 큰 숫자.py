'''
[문제 설명]

자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.

조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.
조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.
조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.
예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.

자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.

제한 사항
n은 1,000,000 이하의 자연수 입니다.
입출력 예
n	result
78	83
15	23
입출력 예 설명
입출력 예#1
문제 예시와 같습니다.
입출력 예#2
15(1111)의 다음 큰 숫자는 23(10111)입니다.

[문제 풀이]

효율성 테스트 때문에 n+1부터 전수조사 하는 방식은 지양해야 한다.

이 문제는 규칙성만 찾아내면 그다지 어렵지 않다. n을 2진법으로 나타낸 후, 가장 작은 '1'이 등장하는 위치를 파악하여 n값에 더해준다.

그리고 난 후, 모자란 1의 개수는 낮은 자리에서부터 0을 1로 바꿔주면 된다.

ex)

n = 1011010, 가장 작은 1이 나타나는 곳이 _____10 이므로 덧셈을 해준다.

new_n = 1011100. 1의 개수가 4개이므로 1개가 더필요하다.

따라서 가장 작은 숫자부터 0을 1로 변경해주면 된다.

answer = 1011101

'''


def solution(n):
    cnt = bin(n)[2:].count('1')
    binary = list(bin(n)[2:])

    add = 1
    for i in range(len(bin(n)[2:])-1, -1, -1):
        if binary[i] == "0":
            add *= 2
        else:
            break

    n += add

    answer = list(bin(n)[2:])
    cnt2 = answer.count("1")
    for i in range(len(answer)-1, -1, -1):
        if cnt == cnt2:
            break
        if answer[i] == "0":
            answer[i] = "1"
            cnt2 += 1
    return int(''.join(answer), 2)


print(solution(15))
print(solution(78))
